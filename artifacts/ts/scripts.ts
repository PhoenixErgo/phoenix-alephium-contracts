/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Address,
  ExecutableScript,
  ExecuteScriptParams,
  ExecuteScriptResult,
  Script,
  SignerProvider,
  HexString,
} from "@alephium/web3";
import { default as CreateContractScriptJson } from "../CreateContract.ral.json";
import { default as PhoenixBurnScriptJson } from "../PhoenixBurn.ral.json";
import { default as PhoenixDepositScriptJson } from "../PhoenixDeposit.ral.json";
import { default as PhoenixMintScriptJson } from "../PhoenixMint.ral.json";
import { default as WithdrawScriptJson } from "../Withdraw.ral.json";

export const CreateContract = new ExecutableScript<{
  factory: HexString;
  baseTokenId: HexString;
  symbol: HexString;
  name: HexString;
  totalSupply: bigint;
  bankFeeNum: bigint;
  creatorFeeNum: bigint;
  interfaceFee: bigint;
}>(Script.fromJson(CreateContractScriptJson));
export const PhoenixBurn = new ExecutableScript<{
  bank: HexString;
  amountHodlTokenToBurn: bigint;
  interfaceFee: bigint;
}>(Script.fromJson(PhoenixBurnScriptJson));
export const PhoenixDeposit = new ExecutableScript<{
  bank: HexString;
  baseTokenId: HexString;
  amountBaseTokenToDeposit: bigint;
  interfaceFee: bigint;
}>(Script.fromJson(PhoenixDepositScriptJson));
export const PhoenixMint = new ExecutableScript<{
  bank: HexString;
  baseTokenId: HexString;
  amountHodlTokenDesired: bigint;
  baseTokenApprovalAmount: bigint;
  interfaceFee: bigint;
}>(Script.fromJson(PhoenixMintScriptJson));
export const Withdraw = new ExecutableScript<{
  token: HexString;
  amount: bigint;
}>(Script.fromJson(WithdrawScriptJson));
